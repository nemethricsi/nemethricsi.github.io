{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/functions/updateCart.js","webpack:///./src/functions/addToCart.js","webpack:///./src/components/AddtoCartButton.js"],"names":["Home","data","products","nodes","categories","map","category","key","id","to","slug","style","color","name","count","type","onClick","cart","JSON","parse","window","localStorage","getItem","line_items","item","product_id","quantity","total","reduce","acc","price","console","log","product","on_sale","src","images","alt","width","dangerouslySetInnerHTML","__html","short_description","stock_quantity","updateCart","existingCart","existingProductsInCart","productExistsIndex","productId","newArray","filter","indexOf","isProductInCart","wooCommerceId","updatedProducts","newProduct","createCartItem","push","getUpdatedProducts","addToCart","updatedCart","setItem","stringify","parseInt","image","AddToCartButton","dispatch","useDispatch","role","tabIndex","onKeyDown","items","loadCart","openCart","e","handleAddToCart"],"mappings":"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","file":"component---src-pages-index-js-415d4f4f3345aa9b36c3.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport AddToCartButton from \"../components/AddtoCartButton\"\n\nexport default function Home({ data }) {\n  const products = data.products.nodes\n  const categories = data.categories.nodes\n\n  return (\n    <Layout>\n      <h2>\n        <mark>(Product Categories)</mark>\n      </h2>\n      <div>\n        {categories &&\n          categories.map(category => (\n            <div key={category.id}>\n              <Link\n                to={`/product-category/${category.slug}`}\n                style={{ color: \"inherit\" }}\n              >\n                <h2>{category.name}</h2>\n              </Link>\n              <h4>{category.count}</h4>\n            </div>\n          ))}\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => {\n          const cart = JSON.parse(window.localStorage.getItem(\"wooCart\"))\n          const line_items = cart?.line_items?.map(item => {\n            return { product_id: item.product_id, quantity: item.quantity }\n          })\n          const total = cart?.line_items?.reduce(\n            (acc, item) => acc + item.quantity * item.price,\n            0\n          )\n          console.log(line_items)\n          console.log(total)\n        }}\n      >\n        SENDING ORDER (kilogolja azt, ami a rendel√©shez kell)\n      </button>\n      <h2>\n        <mark>(Product Listing)</mark>\n      </h2>\n      {products.map(product => (\n        <div key={product.id}>\n          <Link to={`/product/${product.slug}`}>\n            <h2>\n              {product.name}\n              {product.on_sale && <span>SALE!</span>}\n            </h2>\n          </Link>\n          <Link to={`/product-category/${product.categories[0].slug}`}>\n            <p>\n              <strong>{product.categories[0].name}</strong>\n            </p>\n          </Link>\n          <img src={product.images[0].src} alt=\"product\" width=\"200\" />\n          <div\n            dangerouslySetInnerHTML={{ __html: product.short_description }}\n          />\n          <h4>{product.price} ‚Ç¨</h4>\n          <p>{product.stock_quantity} in stock</p>\n          <AddToCartButton product={product} />\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    products: allWcProduct {\n      nodes {\n        id\n        slug\n        name\n        on_sale\n        total_sales\n        catalog_visibility\n        description\n        short_description\n        price\n        regular_price\n        sale_price\n        average_rating\n        categories {\n          id\n          name\n          slug\n        }\n        images {\n          src\n          alt\n        }\n        wooCommerceId\n        manage_stock\n        stock_quantity\n        stock_status\n      }\n      pageInfo {\n        perPage\n      }\n    }\n    categories: allWcCategory {\n      nodes {\n        id\n        name\n        wooCommerceId\n        slug\n        count\n        image {\n          src\n          name\n        }\n      }\n    }\n  }\n`\n","import { createCartItem } from \"./addToCart\"\n\nexport function updateCart(existingCart, product) {\n  const updatedProducts = getUpdatedProducts(existingCart.line_items, product)\n  const updatedCart = {\n    line_items: updatedProducts,\n  }\n  return updatedCart\n}\n\nfunction getUpdatedProducts(existingProductsInCart, product) {\n  const productExistsIndex = isProductInCart(\n    existingProductsInCart,\n    product.wooCommerceId\n  )\n  // Ha benne van a kos√°rban, teh√°t az indexe nagyon -1-n√©l, akkor update-lje a term√©ket\n  if (-1 < productExistsIndex) {\n    let updatedProducts = existingProductsInCart\n    let updatedProduct = updatedProducts[productExistsIndex]\n\n    updatedProduct.quantity += 1\n\n    return updatedProducts\n  } else {\n    const newProduct = createCartItem(product)\n    existingProductsInCart.push(newProduct)\n    return existingProductsInCart\n  }\n}\n\n// return index of the product if it exists\nfunction isProductInCart(existingProductsInCart, productId) {\n  const returnItemThatExits = item => {\n    if (productId === item.product_id) {\n      return item\n    }\n  }\n\n  const newArray = existingProductsInCart.filter(returnItemThatExits)\n\n  return existingProductsInCart.indexOf(newArray[0])\n}\n","import { updateCart } from \"./updateCart\"\n\nexport function addToCart(product) {\n  const existingCart = JSON.parse(window.localStorage.getItem(\"wooCart\"))\n\n  if (existingCart) {\n    const updatedCart = updateCart(existingCart, product)\n    window.localStorage.setItem(\"wooCart\", JSON.stringify(updatedCart))\n  } else {\n    let cart = []\n    cart.push(createCartItem(product))\n    window.localStorage.setItem(\"wooCart\", JSON.stringify({ line_items: cart }))\n  }\n}\n\nexport function createCartItem(product) {\n  return {\n    name: product.name,\n    product_id: product.wooCommerceId,\n    quantity: 1,\n    price: parseInt(product.price),\n    image: product?.images[0].src || null,\n  }\n}\n","import React from \"react\"\nimport { toast } from \"react-toastify\"\nimport { addToCart } from \"../functions/addToCart\"\nimport { useDispatch } from \"react-redux\"\nimport { loadCart, openCart } from \"../cartSlice\"\n\nexport default function AddToCartButton({ product }) {\n  const dispatch = useDispatch()\n  const notify = name => {\n    toast(`üéâ ${name} was added to cart!`)\n  }\n\n  const handleAddToCart = product => {\n    addToCart(product)\n    // notify(product.name)\n    try {\n      const newCart = JSON.parse(window.localStorage.getItem(\"wooCart\"))\n      const items = newCart.line_items\n      dispatch(loadCart(items))\n      dispatch(openCart())\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  return (\n    <>\n      {product.stock_quantity < 1 ? (\n        <p>Out of stock.</p>\n      ) : (\n        <a\n          role=\"button\"\n          tabIndex={0}\n          type=\"button\"\n          onKeyDown={addToCart}\n          onClick={() => handleAddToCart(product)}\n        >\n          Add to Cart\n        </a>\n      )}\n    </>\n  )\n}\n"],"sourceRoot":""}