{"version":3,"sources":["webpack:///./src/templates/Category.js"],"names":["CategoryPage","data","products","productsInCategory","edges","category","src","image","alt","name","count","dangerouslySetInnerHTML","__html","description","map","product","key","node","id","to","slug","price_html","short_description"],"mappings":"2FAAA,gGAIe,SAASA,EAAT,GAAiC,IAATC,EAAQ,EAARA,KAC/BC,EAAWD,EAAKE,mBAAmBC,MACnCC,EAAWJ,EAAKI,SAEtB,OACE,kBAAC,IAAD,KACE,6BACE,yBAAKC,IAAKD,EAASE,MAAMD,IAAKE,IAAKH,EAASI,QAE9C,4BAAKJ,EAASI,MACd,2BACE,iDAEF,+BACGJ,EAASK,MADZ,WAC2BL,EAASI,MAEpC,2BACE,gEAEF,yBACEE,wBAAyB,CACvBC,OAAQP,EAASQ,aAAT,iCAGZ,4BACE,8DAEDX,GACCA,EAASY,KAAI,SAAAC,GAAO,OAClB,yBAAKC,IAAKD,EAAQE,KAAKC,IACrB,kBAAC,IAAD,CAAMC,GAAE,YAAcJ,EAAQE,KAAKG,MACjC,4BAAKL,EAAQE,KAAKR,OAEpB,yBACEE,wBAAyB,CAAEC,OAAQG,EAAQE,KAAKI,cAElD,yBACEV,wBAAyB,CACvBC,OAAQG,EAAQE,KAAKK","file":"component---src-templates-category-js-3b5b2f23d37c476e8217.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\n\nexport default function CategoryPage({ data }) {\n  const products = data.productsInCategory.edges\n  const category = data.category\n\n  return (\n    <Layout>\n      <div>\n        <img src={category.image.src} alt={category.name} />\n      </div>\n      <h1>{category.name}</h1>\n      <p>\n        <mark>category.count</mark>\n      </p>\n      <small>\n        {category.count} art in {category.name}\n      </small>\n      <p>\n        <mark>Category description, if any:</mark>\n      </p>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: category.description || `<p>no description found</p>`,\n        }}\n      />\n      <h2>\n        <mark>(Products in this category)</mark>\n      </h2>\n      {products &&\n        products.map(product => (\n          <div key={product.node.id}>\n            <Link to={`/product/${product.node.slug}`}>\n              <h2>{product.node.name}</h2>\n            </Link>\n            <div\n              dangerouslySetInnerHTML={{ __html: product.node.price_html }}\n            />\n            <div\n              dangerouslySetInnerHTML={{\n                __html: product.node.short_description,\n              }}\n            />\n          </div>\n        ))}\n    </Layout>\n  )\n}\n\n// This needs to be dynamic based on the slug passed in via context in gatsby-node.js\nexport const query = graphql`\n  query($categoryRegex: String!, $id: String!) {\n    productsInCategory: allWcProduct(\n      filter: { categories: { elemMatch: { name: { regex: $categoryRegex } } } }\n    ) {\n      edges {\n        node {\n          name\n          id\n          slug\n          short_description\n          on_sale\n          images {\n            name\n            src\n          }\n          price_html\n        }\n      }\n    }\n    category: wcCategory(id: { eq: $id }) {\n      id\n      name\n      count\n      slug\n      description\n      image {\n        name\n        src\n        alt\n      }\n      wooCommerceId\n    }\n  }\n`\n"],"sourceRoot":""}