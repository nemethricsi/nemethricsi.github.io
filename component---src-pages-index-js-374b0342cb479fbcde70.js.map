{"version":3,"sources":["webpack://gatsby-woocommerce-redux-starter/./src/components/AddToSnipCart.js","webpack://gatsby-woocommerce-redux-starter/./src/pages/index.js"],"names":["AddToSnipCart","product","type","class","data-item-id","slug","data-item-price","price","data-item-url","__dirname","data-item-name","name","data-item-image","images","src","Home","data","products","nodes","categories","map","category","key","id","to","style","color","count","onClick","cart","JSON","parse","window","localStorage","getItem","line_items","item","product_id","quantity","total","reduce","acc","console","log","on_sale","alt","width","dangerouslySetInnerHTML","__html","short_description"],"mappings":"uMAEe,SAASA,EAAT,GAAqC,IAAZC,EAAW,EAAXA,QACtC,OACE,gCACE,qBACEC,KAAK,SACLC,MAAM,oBACNC,eAAcH,EAAQI,KACtBC,kBAAiBL,EAAQM,MACzBC,gBAAkBC,aAAqBR,EAAQI,KAC/CK,iBAAgBT,EAAQU,KACxBC,kBAAiBX,EAAQY,OAAO,GAAGC,KAPrC,mBASmBb,EAAQM,MAT3B,W,wMCCS,SAASQ,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACvBC,EAAWD,EAAKC,SAASC,MACzBC,EAAaH,EAAKG,WAAWD,MAEnC,OACE,gBAAC,IAAD,KACE,0BACE,qDAEF,2BACGC,GACCA,EAAWC,KAAI,SAAAC,GAAQ,OACrB,uBAAKC,IAAKD,EAASE,IACjB,gBAAC,KAAD,CACEC,GAAE,qBAAuBH,EAAShB,KAClCoB,MAAO,CAAEC,MAAO,YAEhB,0BAAKL,EAASV,OAEhB,0BAAKU,EAASM,YAItB,0BACEzB,KAAK,SACL0B,QAAS,WAAO,IAAD,IACPC,EAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,YAC9CC,EAAaN,SAAH,UAAGA,EAAMM,kBAAT,aAAG,EAAkBf,KAAI,SAAAgB,GACvC,MAAO,CAAEC,WAAYD,EAAKC,WAAYC,SAAUF,EAAKE,aAEjDC,EAAQV,SAAH,UAAGA,EAAMM,kBAAT,aAAG,EAAkBK,QAC9B,SAACC,EAAKL,GAAN,OAAeK,EAAML,EAAKE,SAAWF,EAAK7B,QAC1C,GAEFmC,QAAQC,IAAIR,GACZO,QAAQC,IAAIJ,KAZhB,yDAiBA,0BACE,kDAEDtB,EAASG,KAAI,SAAAnB,GAAO,OACnB,uBAAKqB,IAAKrB,EAAQsB,IAChB,gBAAC,KAAD,CAAMC,GAAE,YAAcvB,EAAQI,MAC5B,0BACGJ,EAAQU,KACRV,EAAQ2C,SAAW,uCAGxB,gBAAC,KAAD,CAAMpB,GAAE,qBAAuBvB,EAAQkB,WAAW,GAAGd,MACnD,yBACE,8BAASJ,EAAQkB,WAAW,GAAGR,QAGnC,uBAAKG,IAAKb,EAAQY,OAAO,GAAGC,IAAK+B,IAAI,UAAUC,MAAM,QACrD,uBACEC,wBAAyB,CAAEC,OAAQ/C,EAAQgD,qBAE7C,0BAAKhD,EAAQM,MAAb,MAEA,gBAAC,IAAD,CAAeN,QAASA","file":"component---src-pages-index-js-374b0342cb479fbcde70.js","sourcesContent":["import React from \"react\"\n\nexport default function AddToSnipCart({ product }) {\n  return (\n    <>\n      <a\n        type=\"button\"\n        class=\"snipcart-add-item\"\n        data-item-id={product.slug}\n        data-item-price={product.price}\n        data-item-url={`${__dirname}/product/${product.slug}`}\n        data-item-name={product.name}\n        data-item-image={product.images[0].src}\n      >\n        Add to SnipCart {product.price} HUF\n      </a>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport AddToCartButton from \"../components/AddtoCartButton\"\nimport AddToSnipCart from \"../components/AddToSnipCart\"\n\nexport default function Home({ data }) {\n  const products = data.products.nodes\n  const categories = data.categories.nodes\n\n  return (\n    <Layout>\n      <h2>\n        <mark>(Product Categories)</mark>\n      </h2>\n      <div>\n        {categories &&\n          categories.map(category => (\n            <div key={category.id}>\n              <Link\n                to={`/product-category/${category.slug}`}\n                style={{ color: \"inherit\" }}\n              >\n                <h2>{category.name}</h2>\n              </Link>\n              <h4>{category.count}</h4>\n            </div>\n          ))}\n      </div>\n      <button\n        type=\"button\"\n        onClick={() => {\n          const cart = JSON.parse(window.localStorage.getItem(\"wooCart\"))\n          const line_items = cart?.line_items?.map(item => {\n            return { product_id: item.product_id, quantity: item.quantity }\n          })\n          const total = cart?.line_items?.reduce(\n            (acc, item) => acc + item.quantity * item.price,\n            0\n          )\n          console.log(line_items)\n          console.log(total)\n        }}\n      >\n        SENDING ORDER (kilogolja azt, ami a rendeléshez kell)\n      </button>\n      <h2>\n        <mark>(Product Listing)</mark>\n      </h2>\n      {products.map(product => (\n        <div key={product.id}>\n          <Link to={`/product/${product.slug}`}>\n            <h2>\n              {product.name}\n              {product.on_sale && <span>SALE!</span>}\n            </h2>\n          </Link>\n          <Link to={`/product-category/${product.categories[0].slug}`}>\n            <p>\n              <strong>{product.categories[0].name}</strong>\n            </p>\n          </Link>\n          <img src={product.images[0].src} alt=\"product\" width=\"200\" />\n          <div\n            dangerouslySetInnerHTML={{ __html: product.short_description }}\n          />\n          <h4>{product.price} €</h4>\n          {/* <AddToCartButton product={product} /> */}\n          <AddToSnipCart product={product} />\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    products: allWcProduct {\n      nodes {\n        id\n        slug\n        name\n        on_sale\n        total_sales\n        catalog_visibility\n        description\n        short_description\n        price\n        regular_price\n        sale_price\n        average_rating\n        categories {\n          id\n          name\n          slug\n        }\n        images {\n          src\n          alt\n        }\n        wooCommerceId\n        manage_stock\n        stock_quantity\n        stock_status\n      }\n      pageInfo {\n        perPage\n      }\n    }\n    categories: allWcCategory {\n      nodes {\n        id\n        name\n        wooCommerceId\n        slug\n        count\n        image {\n          src\n          name\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}